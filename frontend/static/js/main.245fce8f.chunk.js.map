{"version":3,"sources":["components/ProtectedRoute.js","components/Header.js","components/Register.js","components/Login.js","utils/utils.js","utils/api.js","contexts/CurrentUserContext.js","images/profile/avatar.jpg","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/Mesto.js","components/InfoTooltip.js","utils/apiAuth.js","components/App.js","reportWebVitals.js","index.js"],"names":["ProtectedRoute","Component","component","props","isLoggedIn","to","Header","className","link","onClick","linkAction","linkText","Register","React","useState","email","password","regData","setRegData","regMessage","setRegMessage","showButton","handleChange","e","target","name","value","validity","valid","validationMessage","checkFormsValidation","history","useHistory","push","onSubmit","preventDefault","onRegister","noValidate","onChange","type","emailError","required","minLength","maxLength","placeholder","passwordError","href","Login","loginData","setLoginData","loginMessage","setLoginMessage","onLogin","id","returnResult","res","ok","json","Promise","reject","api","apiSettings","this","_baseUrl","baseUrl","_headers","headers","fetch","method","credentials","then","body","JSON","stringify","avatar","about","item","cardId","CurrentUserContext","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","src","alt","aria-label","length","Main","onEditProfile","onAddPlace","onEditAvatar","cards","style","backgroundImage","profileAvatar","map","Footer","ImagePopup","evt","classList","contains","onClose","PopupWithForm","isOpen","title","children","buttonText","EditProfilePopup","setName","description","setDescription","useEffect","onUpdateUser","EditAvatarPopup","avatarRef","useRef","current","onUpdateAvatar","ref","AddPlacePopup","newPlaceName","newPlaceLink","onCreateCard","Mesto","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","selectedCard","setSelectedCard","setСurrentUser","setCards","all","getMyInfo","getInitialCards","userData","catch","err","console","log","handleEscClose","useCallback","key","closeAllPopups","window","removeEventListener","Provider","onLogout","addEventListener","cardDislike","cardLike","newCard","state","c","deleteCard","filter","userInfo","updateProfile","postCard","updateAvatar","InfoTooltip","onkeydown","tooltipIsOpen","status","class","text","apiAuth","App","setIsLoggedIn","succsess","infoTooltip","setInfoTooltip","setTooltipIsOpen","handleСloseInfoTooltip","path","register","message","login","statusText","localStorage","removeItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.245fce8f.chunk.js","sourcesContent":["import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n\n  return (\n    <Route>\n      {\n        () => props.isLoggedIn ? <Component {...props} /> : <Redirect to=\"/sign-in\"/>\n      }\n    </Route>\n  );\n};\n\nexport default ProtectedRoute;","function Header(props) {\n  \n  return (\n    <header className='header'>\n        <div className='header__profileBlock'>\n          <div className='header__logo'></div>\n          <div className='header__profileBlock'>\n            <div className='header__userName'>{props.link}</div>\n            <div className='header__logout' onClick={props.linkAction}>{props.linkText}</div>\n          </div>\n        </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport Header from './Header';\nimport { useHistory } from 'react-router-dom';\n\nfunction Register(props) {  \n    // Объект с регистрационными данными\n    const [regData, setRegData] = React.useState({\n        email: '',\n        password: '',\n    });\n    \n    // Объект с ошибками полей\n    const [regMessage, setRegMessage] = React.useState({\n        email: '',\n        password: '',\n    });\n\n    // Валидация формы\n    const [showButton, setShowButton] = React.useState(true)\n    function checkFormsValidation(e) {\n        if (e.target.validity.valid) { setRegMessage({...regMessage, [e.target.name]: false}) }\n        else { setRegMessage({...regMessage, [e.target.name]: e.target.validationMessage}) }\n        // не могу починить\n        // if (regMessage.email || regMessage.password) { setShowButton(false) } else { setShowButton(true) }\n    }\n\n    function handleChange(e) {\n        const { name, value } = e.target\n        setRegData({\n            ...regData, \n            [name]: value\n        })\n        checkFormsValidation(e);\n    }\n\n    // Регистрация\n    function handleRegister(e) {\n        e.preventDefault();\n        if (!showButton) { return };\n        props.onRegister(regData);\n    }\n\n    const history = useHistory();\n    function toSignIn() { history.push('/sign-in') }\n\n    return(\n        <>\n        <Header link={''} linkText={'Войти'} linkAction={toSignIn} />\n        <form className='login__container' onSubmit={handleRegister} noValidate>\n            <h2 className='login__heading'>Регистрация</h2>\n            <fieldset className='login__fields'>\n                <input value={regData.email} onChange={handleChange} type='text' className={regMessage.emailError ? 'login__input login__input_error' : 'login__input'} name='email' required minLength='6' maxLength='40' placeholder='Email' />\n                <span className='login__error'>{regMessage.email}</span>\n                <input value={regData.password} onChange={handleChange} type='password' className={regMessage.passwordError ? 'login__input login__input_error' : 'login__input'} name='password' required minLength='4' maxLength='40' placeholder='Пароль' />\n                <span className='login__error'>{regMessage.password}</span>\n                <div className='login__button-block'>\n                    <input type='submit' className={showButton ? 'login__login-button' : 'login__login-button login__login-button_inactive'} value='Зарегистрироваться' />\n                    <a href='/sign-in' className='login__login-link'>Уже зарегистрированы? Войти</a>\n                </div>\n            </fieldset>\n        </form>\n        </>\n    )\n};\n\nexport default Register;","import React from 'react';\nimport Header from './Header';\nimport { useHistory } from 'react-router-dom';\n\nfunction Login(props) {  \n    // Объект с данными логина\n    const [loginData, setLoginData] = React.useState({\n        email: '',\n        password: '',\n    });\n\n    // Объект с ошибками полей\n    const [loginMessage, setLoginMessage] = React.useState({\n        email: '',\n        password: '',\n    });\n\n    // Валидация формы\n    const [showButton, setShowButton] = React.useState(true)\n    function checkFormsValidation(e) {\n        if (e.target.validity.valid) { setLoginMessage({...loginMessage, [e.target.name]: false}) }\n        else { setLoginMessage({...loginMessage, [e.target.name]: e.target.validationMessage}) }\n        // не могу починить\n        // if (loginMessage.email || loginMessage.password) { setShowButton(false) } else { setShowButton(true) }\n    }\n\n    function handleChange(e) {\n        const { name, value } = e.target\n        setLoginData({\n            ...loginData, \n            [name]: value\n        })\n        checkFormsValidation(e);\n    }\n\n    // Логин\n    function handleLogin(e) {\n        e.preventDefault();\n        if (!showButton) { return };\n        props.onLogin(loginData);\n    }\n\n    const history = useHistory();\n    function toSignUp() { history.push('/sign-up') }\n\n    return(\n        <>\n        <Header link={''} linkText={'Зарегистрироваться'} linkAction={toSignUp} />\n        <form className='login__container' onSubmit={handleLogin} noValidate>\n            <h2 className='login__heading'>Вход</h2>\n            <fieldset className='login__fields'>\n                <input value={loginData.email} onChange={handleChange} type='text' className={loginMessage.emailError ? 'login__input login__input_error' : 'login__input'} name='email' required minLength='6' maxLength='40' placeholder='Email' />\n                <span className='login__error' id='login__input_error'>{loginMessage.email}</span>\n                <input value={loginData.password} onChange={handleChange} type='password' className={loginMessage.passwordError ? 'login__input login__input_error' : 'login__input'} name='password' required minLength='4' maxLength='40' placeholder='Пароль' />\n                <span className='login__error' id='login__input_error'>{loginMessage.password}</span>\n                <div className='login__button-block'>\n                    <input type='submit' className={showButton ? 'login__login-button' : 'login__login-button login__login-button_inactive'} value='Войти' />\n                </div>\n            </fieldset>\n        </form>\n        </>\n    )\n};\n\nexport default Login;","// export function renderLoading(element, state) {\n//     const button = element.querySelector('.popup__submit-button')\n//     if (state === 'on') {button.value = 'Сохранение...'}\n//     else if (state === 'reset') {button.value = 'Сохранить'}\n// };\n\nexport function returnResult(res) {\n    if (res.ok) {return res.json()}\n    // return Promise.reject(new Error(`Статус не ОК (${res.status} ${res.statusText})`))\n    return Promise.reject(res)\n};\n\n// export function likeCard(element,cardObj) {\n//     cardObj.likesCount += 1;\n//     element.querySelector('.card__like-button').classList.add('card__like-button_liked');\n//     element.querySelector('.card__like-counter').textContent = cardObj.likesCount;\n//     cardObj.isliked = true;\n// }\n\n// export function dislikeCard(element, cardObj) {\n//     cardObj.likesCount -= 1;\n//     element.querySelector('.card__like-button').classList.remove('card__like-button_liked');\n//     // if (res.likes.length == 0) {element.querySelector(\".card__like-counter\").textContent = ''}\n//     // else {element.querySelector(\".card__like-counter\").textContent = res.likes.length};\n//     if (cardObj.likesCount > 0) {element.querySelector('.card__like-counter').textContent = cardObj.likesCount}\n//     else {element.querySelector('.card__like-counter').textContent = ''};\n//     cardObj.isliked = false;\n// }","import {returnResult} from './utils';\n\nclass Api {\n  constructor(apiSettings) {\n    this._baseUrl = apiSettings.baseUrl;\n    this._headers = apiSettings.headers\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'GET',\n      credentials: 'include',\n      headers: this._headers\n    })\n      .then(res => returnResult(res))\n  }\n\n  getMyInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      credentials: 'include',\n      headers: this._headers\n    })\n      .then(res => returnResult(res))\n  }\n\n  updateAvatar(link) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      credentials: 'include',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: link,\n      })\n    })\n      .then(res => returnResult(res))\n  }\n\n  updateProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      credentials: 'include',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    })\n      .then(res => returnResult(res))\n  }\n\n  postCard(item) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: item.name,\n        link: item.link\n      })\n    })\n      .then(res => returnResult(res))\n  }\n\n  cardLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      credentials: 'include',\n      headers: this._headers,\n    })\n      .then(res => returnResult(res))\n  }\n\n  cardDislike(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      credentials: 'include',\n      headers: this._headers,\n    })\n      .then(res => returnResult(res))\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      credentials: 'include',\n      headers: this._headers,\n    })\n      .then(res => returnResult(res))\n  }\n};\n\nconst apiSettings = {\n  // baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-21',\n  baseUrl: 'https://api.mesto-vv.nomoredomains.monster',\n  headers: {\n      // authorization: 'b701286d-04dc-43b0-b34e-ea7babd7f4f7',\n      'Content-Type': 'application/json',\n  },\n};\n\nconst api = new Api(apiSettings);\nexport default api;","import React from 'react';\n\nconst CurrentUserContext = React.createContext();\nexport default CurrentUserContext;","export default __webpack_public_path__ + \"static/media/avatar.f81832ee.jpg\";","import React from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext'\n\n\nfunction Card({card, onCardClick, onCardLike, onCardDelete}) {\n\n    function handleClick() { onCardClick(card) }\n    function handleLikeClick() { onCardLike(card) }\n    function handleDeleteClick() { onCardDelete(card) }\n\n    // Подписываемся на контект, чтобы получить объект с данными пользователя\n    const currentUser = React.useContext(CurrentUserContext);\n\n    // Определяем, являемся ли мы владельцем текущей карточки\n    const isOwn = card.owner._id === currentUser._id;\n\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\n    const cardDeleteButtonClassName = (\n        `card__delete-button ${isOwn ? 'card__delete-button_visible' : 'card__delete-button_hidden'}`\n    );\n\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\n    const cardLikeButtonClassName = (\n        `${isLiked ? 'card__like-button_liked' : 'card__like-button'}`\n    );\n\n    // TODO спринт 11: добавить проверку URL карточек\n    // Не получается отдать на рендер промис вместо карточки\n    // function checkElement(card) {\n    //     return new Promise(function (resolve, reject) {\n    //       const image = new Image();\n    //       image.src = card.link;\n    //       image.onload = () => {\n    //         resolve(card)\n    //       };\n    //       image.onerror = () => {\n    //         reject('Файл не найден')\n    //       };\n    //     })\n    //   }\n\n    return (\n        <li className='card'>\n            <img src={card.link} alt={card.name} className='card__image' onClick={handleClick}/>\n            <button type='button' className={cardDeleteButtonClassName} aria-label='Удалить' onClick={handleDeleteClick} ></button>\n            <div className='card__info'>\n                <h2 className='card__title'>{card.name}</h2>\n                <div className='card__like-block'>\n                    <button type='button' className={cardLikeButtonClassName} aria-label='Мне нравится' onClick={handleLikeClick}></button>\n                    <p className='card__like-counter'>{card.likes.length > 0 ? card.likes.length : ''}</p>\n                </div>\n            </div>\n        </li>\n    )\n  }\n  \n  export default Card;","import React from 'react';\nimport profileAvatar from '../images/profile/avatar.jpg';\nimport Card from './Card';\nimport CurrentUserContext from '../contexts/CurrentUserContext'\n\nfunction Main({onEditProfile, onAddPlace, onEditAvatar, onCardClick, cards, onCardLike, onCardDelete}) {\n\n    // Подписываемся на контект, чтобы получить объект с данными пользователя\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <main className='main'>\n            <section className='profile'>\n                <div className='profile__info'>\n                    <img style={{ backgroundImage: `url(${currentUser.avatar ? currentUser.avatar : profileAvatar})` }}  alt={currentUser.name} className='profile__avatar' />\n                    <span onClick={onEditAvatar} className='profile__edit-avatar'></span>\n                    <div className='profile__text-info'>\n                        <div className='profile__name-block'>\n                            <h1 className='profile__name'>{currentUser.name}</h1>\n                            <button onClick={onEditProfile} type='button' className='profile__edit-button' aria-label='Редактировать профиль'></button>\n                        </div>\n                        <p className='profile__subline'>{currentUser.about}</p>\n                    </div>\n                </div>\n                <button onClick={onAddPlace} type='button' className='profile__add-button' aria-label='Добавить'></button>\n            </section>\n\n            <section className='album'>\n                <ul className='album__list'>\n                    {cards.map(item => { \n                        return (<Card card={item} key={item._id} onCardClick={onCardClick} onCardLike={onCardLike} onCardDelete={onCardDelete} />) })}\n                </ul>\n            </section>\n        </main>\n    );\n}\n\nexport default Main;\n","function Footer() {\n  return (\n    <footer className='footer'>\n        <p className='footer__copyright'>&copy; 2021 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","function ImagePopup(props) {\n  \n  const handleClickOverlay = (evt) => {\n    if (evt.target.classList.contains('popup_opened')) {\n      props.onClose();\n    }\n  }\n\n  return (\n    <div className={props.card ? 'popup popup_opened' : 'popup'} id='zoom-popup' onClick={handleClickOverlay}>\n      <div className='popup__container'>\n        <img src={props.card ? props.card.link : ''} alt={props.card ? props.card.name : ''} className='popup__image' />\n        <h3 className='popup__text'>{props.card ? props.card.name : ''}</h3>\n        <button onClick={props.onClose} type='button' className='popup__close' id='zoom-close-button' aria-label='Закрыть'></button>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;","function PopupWithForm(props) {\n\n  const handleClickOverlay = (evt) => {\n    if (evt.target.classList.contains('popup_opened')) {\n      props.onClose();\n    }\n  }\n\n  return (\n    <div className={props.isOpen ? 'popup popup_opened' : 'popup'} id={props.name} onClick={handleClickOverlay}>\n      <form className='popup__container popup__container_form' name={props.name} onSubmit={props.onSubmit}>\n          <h2 className='popup__heading'>{props.title}</h2>\n          <fieldset className='popup__fields'>\n              {props.children}\n          </fieldset>\n          <input type='submit' className='popup__submit-button' value={props.buttonText} />\n          <button onClick={props.onClose} type='button' className='popup__close' aria-label='Закрыть'></button>\n      </form>\n    </div>\n  );\n}\n\nexport default PopupWithForm;","import React from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext'\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditProfilePopup(props) {\n    // Подписываемся на контект, чтобы получить объект с данными пользователя\n    const currentUser = React.useContext(CurrentUserContext);\n\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n\n    React.useEffect(() => {\n        // при первичной загрузке currentUser не успевает загрузиться и отдает пустой объект\n        if (currentUser.name && currentUser.about) {\n            setName(currentUser.name);\n            setDescription(currentUser.about);\n        }\n      }, [currentUser, props.isOpen]); \n    \n    function handleNameChange(e) { setName(e.target.value) }\n    function handleDescriptionChange(e) { setDescription(e.target.value) }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        // Передаём значения управляемых компонентов во внешний обработчик\n        props.onUpdateUser({\n          name,\n          about: description,\n        });\n    }\n\n    return (\n        <PopupWithForm title='Редактировать профиль' name='edit-profile' buttonText='Сохранить' isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} >\n            <input value={name} onChange={handleNameChange} type='text' className='popup__input' id='profile-name' name='input-name' required minLength='2' maxLength='40' placeholder='Имя' />\n            <span className='popup__error' id='profile-name-error'></span>\n            <input value={description} onChange={handleDescriptionChange} type='text' className='popup__input' id='profile-subline' name='input-subline' required minLength='2' maxLength='200' placeholder='Род занятий' />\n            <span className='popup__error' id='profile-subline-error'></span>\n        </PopupWithForm>\n    )\n};\n\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup(props) {\n    // Подписываемся на контект, чтобы получить объект с данными пользователя\n    const avatarRef = React.useRef()\n\n    // Очистка инпута при открытии\n    React.useEffect(() => {\n        avatarRef.current.value = '';\n      }, [props.isOpen]); \n    \n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateAvatar({ avatar: avatarRef.current.value });\n    }\n\n    return (\n        <PopupWithForm title='Обновить аватар' name='edit-avatar' buttonText='Сохранить' isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}>\n            <input ref={avatarRef} type='url' className='popup__input' id='avatar-url' name='avatar-url' required minLength='2' placeholder='Ссылка на аватар' />\n            <span className='popup__error' id='avatar-url-error'></span>\n        </PopupWithForm>\n    )\n};\nexport default EditAvatarPopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup(props) {\n    // Подписываемся на контект, чтобы получить объект с данными пользователя\n    const newPlaceName = React.useRef();\n    const newPlaceLink = React.useRef();\n    \n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onCreateCard({ \n            name: newPlaceName.current.value,\n            link: newPlaceLink.current.value,\n        });\n    }\n\n    React.useEffect(() => {\n        newPlaceName.current.value = '';\n        newPlaceLink.current.value = '';\n    }, [props.isOpen])\n\n    return (\n        <PopupWithForm title='Новое место' name='add-place' buttonText='Сохранить' isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} >\n            <input ref={newPlaceName} type='text' className='popup__input' id='place-name' name='place-name' required minLength='2' maxLength='30' placeholder='Название' />\n            <span className='popup__error' id='place-name-error'></span>\n            <input ref={newPlaceLink} type='url' className='popup__input' id='place-link' name='place-link' required placeholder='Ссылка на картинку' />\n            <span className='popup__error' id='place-link-error'></span>\n        </PopupWithForm>\n    )\n};\nexport default AddPlacePopup;","import React from 'react';\nimport api from '../utils/api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\n// import PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\n\nfunction Mesto(props) {\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState(null);\n\n    const [currentUser, setСurrentUser] = React.useState({});\n    const [cards, setCards] = React.useState([]);\n    \n    React.useEffect(() => {\n        Promise.all([api.getMyInfo(), api.getInitialCards()])\n        .then(([ userData, cards ]) => { \n            setСurrentUser(userData);\n            setCards(cards);\n        })\n        .catch(err => console.log('Promise.all ' + err)); \n    }, [])\n\n    // Обработчики кнопок\n    function handleEditProfileClick() {\n        setEditProfilePopupOpen(true);\n        window.addEventListener('keydown', handleEscClose)\n    };\n\n    function handleAddPlaceClick() {\n        setAddPlacePopupOpen(true);\n        window.addEventListener('keydown', handleEscClose)\n    };\n    \n    function handleEditAvatarClick() {\n        setEditAvatarPopupOpen(true);\n        window.addEventListener('keydown', handleEscClose)\n    };\n\n    // Попап с крупной фото\n    function handleCardClick(card) {\n        window.addEventListener('keydown', handleEscClose)\n        setSelectedCard(card)\n    }\n\n    // Закрытие попапов\n    const handleEscClose = React.useCallback((evt) => {\n        if (evt.key === \"Escape\") { closeAllPopups() }\n    }, [])\n\n    function closeAllPopups() {\n        setSelectedCard(null);\n        setEditProfilePopupOpen(false);\n        setAddPlacePopupOpen(false);\n        setEditAvatarPopupOpen(false);\n        window.removeEventListener('keydown', handleEscClose)\n    };\n\n    // Обновление профиля\n    function handleUpdateUser(userInfo) {\n        api.updateProfile(userInfo.name, userInfo.about)\n        .then(res => {\n            setСurrentUser(res);\n            closeAllPopups();\n        })\n        .catch(err => console.log('api.setUserInfo ' + err))\n    }\n\n    function handleUpdateAvatar(userInfo) {\n        api.updateAvatar(userInfo.avatar)\n        .then(res => {\n            setСurrentUser(res);\n            closeAllPopups();\n        })\n        .catch(err => console.log('api.setUserInfo ' + err))\n    }\n\n    // Карточки\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        \n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        const promise = isLiked ? api.cardDislike(card._id) : api.cardLike(card._id);\n        promise.then(newCard => {\n            setCards(state => state.map(c => c._id === card._id ? newCard : c));\n        })\n        .catch(err => console.log('api.cardDislike ' + err));\n    } \n    \n    function handleCardDelete(card) {\n        api.deleteCard(card._id).then(() => {\n                setCards(state => state.filter(c => c._id !== card._id))\n            })\n            .catch(err => console.log('api.deleteCard ' + err));\n    }\n\n    function handleAddPlaceSubmit(card) {\n        api.postCard(card)\n            .then(newCard => {\n                setCards([newCard, ...cards]);\n                closeAllPopups();\n            })\n            .catch(err => console.log('api.deleteCard ' + err));\n    }\n\n    return (\n    <CurrentUserContext.Provider value={currentUser}>\n        <Header link={props.isLoggedIn} linkText={'Выйти'} linkAction={props.onLogout}/>\n        <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick} cards={cards} onCardLike={handleCardLike} onCardDelete={handleCardDelete} />\n        <Footer />\n\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser}/> \n\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onCreateCard={handleAddPlaceSubmit} />\n\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} /> \n\n        {/* <PopupWithForm title='Вы уверены?' name='confirm' onClose={closeAllPopups}>\n        <input type='submit' className='popup__submit-button' value='Сохранить' />\n        </PopupWithForm> */}\n\n        <ImagePopup onClose={closeAllPopups} card={selectedCard} />\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default Mesto;","import React from 'react';\n\nfunction InfoTooltip(props) {\n\n  const handleClickOverlay = (evt) => {\n    if (evt.target.classList.contains('popup_opened')) {props.onClose()}\n  }\n\n  // Закрытие попапа по Esc\n  React.useEffect(() => {\n    const handleEscClose = (evt) => { if (evt.key === \"Escape\") {props.onClose()} };\n    window.onkeydown = handleEscClose;\n    return () => { window.onkeydown = null }\n  }, []);\n\n  return (\n    <div className={props.tooltipIsOpen ? 'popup popup_opened' : 'popup'} onClick={handleClickOverlay}>\n      <div className='popup__container popup__container_form' >\n        <div className={props.status.class} />\n        <h2 className='popup__heading popup__heading_icon'>{props.status.text}</h2>\n        <button onClick={props.onClose} type='button' className='popup__close' aria-label='Закрыть'></button>\n      </div>\n    </div>\n  );\n}\n\nexport default InfoTooltip;","import {returnResult} from './utils';\n\nclass ApiAuth {\n  constructor(apiSettings) {\n    this._baseUrl = apiSettings.baseUrl;\n    this._headers = apiSettings.headers;\n  }\n\n  register(password, email) {\n    return fetch(`${this._baseUrl}/signup`, {\n      headers: this._headers,\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify({\n        'password': password,\n        'email': email\n      })\n    })\n      .then(res => returnResult(res))\n  }\n\n  login(password, email) {\n    return fetch(`${this._baseUrl}/signin`, {\n      headers: this._headers,\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify({\n        'password': password,\n        'email': email\n      })\n    })\n      .then(res => returnResult(res))\n  }\n\n  // validateLogin(jwt) {\n  //   return fetch(`${this._baseUrl}/users/me`, {\n  //     method: 'GET',\n  //     credentials: 'include',\n  //     headers: {\n  //       ...this._headers,\n  //       \"Authorization\" : `Bearer ${jwt}`\n  //     }\n  //   })\n  //     .then(res => returnResult(res))\n  // }\n};\n\nconst apiSettings = {\n  // baseUrl: 'https://auth.nomoreparties.co',\n  baseUrl: 'https://api.mesto-vv.nomoredomains.monster',\n  headers: {\n    'Content-Type': 'application/json',\n  }\n};\n\nconst apiAuth = new ApiAuth(apiSettings);\nexport default apiAuth;","import React from 'react';\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\nimport ProtectedRoute from '../components/ProtectedRoute';\nimport Register from '../components/Register';\nimport Login from '../components/Login';\nimport Mesto from '../components/Mesto';\nimport InfoTooltip from './InfoTooltip';\nimport apiAuth from '../utils/apiAuth';\n\nfunction App() {\n    const history = useHistory();\n\n    const [isLoggedIn, setIsLoggedIn] = React.useState();    \n    // React.useEffect(() => {\n    //     tokenCheck()\n    //     }, []\n    // )\n\n    // Все для попапа\n    const [infoTooltip, setInfoTooltip] = React.useState({\n        class: '',\n        text: '',\n        succsess: false\n    });\n    const [tooltipIsOpen, setTooltipIsOpen] = React.useState(false);\n    function handleСloseInfoTooltip() { \n        setTooltipIsOpen(false);        \n        if (infoTooltip.succsess) {\n            history.push('/mesto');\n        }\n    };\n\n    // Регистрация\n    function onRegister(regData) {\n        apiAuth.register(regData.password, regData.email)\n            .then(res => {\n                setIsLoggedIn(regData.email)\n                setInfoTooltip({\n                    class: 'popup__icon popup__icon_success',\n                    text: 'Вы успешно зарегистрировались!',\n                    succsess: true\n                })\n            })\n            .catch(err => {\n                setInfoTooltip({\n                    class: 'popup__icon popup__icon_fail',\n                    text: `${err.status} ${err.message} Попробуйте ещё раз.`,\n                    succsess: false\n                })\n                setTooltipIsOpen(true)\n            })\n    }\n\n    // Логин\n    function onLogin(loginData) {\n        apiAuth.login(loginData.password, loginData.email)\n            .then(res => {\n                console.log(loginData)\n                setIsLoggedIn(loginData.email);\n                // localStorage.setItem('jwt', res.token)\n                history.push('/mesto');\n            })\n            .catch(err => {\n                setInfoTooltip({\n                    class: 'popup__icon popup__icon_fail',\n                    text: `${err.status} ${err.statusText} Попробуйте ещё раз.`,\n                    succsess: false\n                });\n                setTooltipIsOpen(true);\n            })\n    }\n\n    // Проверка токена\n    // function tokenCheck() {\n    //     const jwt = localStorage.getItem('jwt')\n    //     if (!jwt) { \n    //         // console.log('токена нет')\n    //         return }\n    //     // console.log('токен есть')\n    //     apiAuth.validateLogin(jwt)\n    //         .then(res => {\n    //             setIsLoggedIn(res.data.email);\n    //             history.push('/mesto');\n    //         })\n    //         .catch(err => console.log('apiAuth.validateLogin ' + err));\n    // }\n\n    // Логаут\n    function onLogout() {\n        setIsLoggedIn(false);\n        localStorage.removeItem('jwt');\n        history.push('/sign-in');\n    }\n\n    return (\n        <div className='page'>\n            <Switch>\n                <Route path='/sign-up'>\n                    <Register onRegister={onRegister} />\n                    <InfoTooltip tooltipIsOpen={tooltipIsOpen} onClose={handleСloseInfoTooltip} status={infoTooltip} />\n                </Route>\n                <Route path='/sign-in'>\n                    <Login onLogin={onLogin} />\n                    <InfoTooltip tooltipIsOpen={tooltipIsOpen} onClose={handleСloseInfoTooltip} status={infoTooltip} />\n                </Route>\n                <ProtectedRoute path='/mesto' component={Mesto} isLoggedIn={isLoggedIn} onLogout={onLogout} />\n                <Route>\n                    <Redirect to=\"/mesto\" />\n                </Route>\n            </Switch>\n        </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}